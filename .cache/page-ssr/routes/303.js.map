{"version":3,"file":"303.js","mappings":"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","sources":["webpack://mayankraj.com/../../../.yarn/berry/cache/camelcase-npm-6.3.0-e5e42a0d15-10c0.zip/node_modules/camelcase/index.js","webpack://mayankraj.com/./.yarn/__virtual__/gatsby-plugin-google-analytics-virtual-a31195b70a/4/.yarn/berry/cache/gatsby-plugin-google-analytics-npm-5.13.1-b252bbe12e-10c0.zip/node_modules/gatsby-plugin-google-analytics/index.js","webpack://mayankraj.com/../src/image-utils.ts","webpack://mayankraj.com/../src/components/hooks.ts","webpack://mayankraj.com/../src/components/placeholder.tsx","webpack://mayankraj.com/../src/components/picture.tsx","webpack://mayankraj.com/../src/components/main-image.tsx","webpack://mayankraj.com/../src/components/layout-wrapper.tsx","webpack://mayankraj.com/../src/components/gatsby-image.server.tsx","webpack://mayankraj.com/../src/components/static-image.server.tsx"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nexports.__esModule = true;\nexports.OutboundLink = OutboundLink;\nexports.trackCustomEvent = trackCustomEvent;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nconst createFunctionWithTimeout = (callback, optTimeout = 1000) => {\n  let called = false;\n  const raceCallback = () => {\n    if (!called) {\n      called = true;\n      callback();\n    }\n  };\n  setTimeout(raceCallback, optTimeout);\n  return raceCallback;\n};\nfunction OutboundLink(props) {\n  const {\n    eventCategory,\n    eventAction,\n    eventLabel,\n    eventValue,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_react.default.createElement(\"a\", (0, _extends2.default)({}, rest, {\n    onClick: e => {\n      if (typeof props.onClick === `function`) {\n        props.onClick(e);\n      }\n      let redirect = true;\n      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey || e.defaultPrevented) {\n        redirect = false;\n      }\n      if (props.target && props.target.toLowerCase() !== `_self`) {\n        redirect = false;\n      }\n      if (window.ga) {\n        window.ga(`send`, `event`, {\n          eventCategory: eventCategory || `Outbound Link`,\n          eventAction: eventAction || `click`,\n          eventLabel: eventLabel || props.href,\n          eventValue,\n          transport: redirect ? `beacon` : ``,\n          hitCallback: function () {\n            if (redirect) {\n              document.location = props.href;\n            }\n          }\n        });\n      } else {\n        if (redirect) {\n          document.location = props.href;\n        }\n      }\n      return false;\n    }\n  }));\n}\nOutboundLink.propTypes = {\n  href: _propTypes.default.string,\n  target: _propTypes.default.string,\n  eventCategory: _propTypes.default.string,\n  eventAction: _propTypes.default.string,\n  eventLabel: _propTypes.default.string,\n  eventValue: _propTypes.default.number,\n  onClick: _propTypes.default.func\n};\n\n/**\n * This allows the user to create custom events within their Gatsby projects.\n *\n * @param {import('gatsby-plugin-google-analytics').CustomEventArgs} args\n * @see https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#events\n */\nfunction trackCustomEvent({\n  category,\n  action,\n  label,\n  value,\n  nonInteraction = false,\n  transport,\n  hitCallback,\n  callbackTimeout = 1000\n}) {\n  if (typeof window !== `undefined` && window.ga) {\n    const trackingEventOptions = {\n      eventCategory: category,\n      eventAction: action,\n      eventLabel: label,\n      eventValue: value,\n      nonInteraction: nonInteraction,\n      transport\n    };\n    if (hitCallback && typeof hitCallback === `function`) {\n      trackingEventOptions.hitCallback = createFunctionWithTimeout(hitCallback, callbackTimeout);\n    }\n    window.ga(`send`, `event`, trackingEventOptions);\n  }\n}","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n"],"names":["_interopRequireDefault","require","exports","__esModule","OutboundLink","trackCustomEvent","_extends2","_react","_propTypes","createFunctionWithTimeout","callback","optTimeout","called","raceCallback","setTimeout","props","eventCategory","eventAction","eventLabel","eventValue","rest","default","createElement","onClick","e","redirect","button","altKey","ctrlKey","metaKey","shiftKey","defaultPrevented","target","toLowerCase","window","ga","href","transport","hitCallback","document","location","propTypes","string","number","func","category","action","label","value","nonInteraction","callbackTimeout","trackingEventOptions","s","l","u","d","c","h","g","warn","console","p","sortNumeric","t","m","getSizes","f","getSrcSet","map","src","width","join","v","lastIndexOf","a","slice","length","w","layout","i","r","o","height","sourceMetadata","breakpoints","aspectRatio","formats","n","Math","round","y","generateImageSource","filename","format","fit","options","b","pluginName","reporter","S","N","backgroundColor","x","placeholderURL","Error","I","Set","size","has","delete","add","W","Object","entries","filter","outputPixelDensities","k","M","sizes","presentationWidth","presentationHeight","unscaledWidth","E","j","sources","R","forEach","Boolean","find","fallback","srcSet","push","type","_","images","placeholder","dedupeAndSortDensities","Array","from","concat","sort","min","includes","Number","MAX_SAFE_INTEGER","max","GATSBY___IMAGE","getImage","gatsbyImageData","gatsbyImage","childImageSharp","getSrc","baseUrl","urlBuilder","sourceWidth","sourceHeight","media","image","process","env","NODE_ENV","apply","A","O","T","z","_Picture$propTypes","loading","alt","shouldLoad","decoding","L","Picture","key","isRequired","bool","displayName","exact","arrayOf","oneOfType","q","C","Placeholder","D","MainImage","Fragment","P","H","NativeScriptLoading","dangerouslySetInnerHTML","__html","F","Sizer","style","paddingTop","maxWidth","display","role","position","B","LayoutWrapper","children","G","V","U","removeNewLines","replace","X","GatsbyImage","as","className","class","imgClassName","imgStyle","objectFit","objectPosition","overflow","verticalAlign","top","left","bottom","right","opacity","transition","transform","willChange","Y","Z","__imageData","__error","J","checkDimensionProps","call","arguments","K","Q","StaticImage","generateImageData","getImageData","getLowResolutionImageURL","withArtDirection"],"sourceRoot":""}