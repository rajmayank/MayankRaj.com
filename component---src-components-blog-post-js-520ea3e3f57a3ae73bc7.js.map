{"version":3,"file":"component---src-components-blog-post-js-520ea3e3f57a3ae73bc7.js","mappings":"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","sources":["webpack://mayankraj.com/./src/components/blog-post.js","webpack://mayankraj.com/./src/components/compact-header.js"],"sourcesContent":["import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport CompactHeader from \"./compact-header\";\nimport PageFooter from \"./footer\";\nimport Seo from \"./seo\";\nimport \"../styles/main.scss\";\n\nconst BlogPostTemplate = ({ data }) => {\n  const post = data.markdownRemark;\n\n  return (\n    <div>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.excerpt || post.excerpt}\n        pathname={post.frontmatter.page_slug}\n        image={post.frontmatter.bgimage}\n        article={true}\n        datePublished={post.frontmatter.date}\n      />\n      <CompactHeader\n        title={post.frontmatter.title}\n        mood={post.frontmatter.mood}\n        bgImageName={post.frontmatter.bgimage}\n        category={post.frontmatter.category}\n        date={post.frontmatter.date}\n      />\n      <div className=\"body-container\">\n        <div className=\"content-container\">\n          <div className=\"text text-justify text-spacers\">\n            <article>\n              <section dangerouslySetInnerHTML={{ __html: post.html }} />\n            </article>\n            <div className=\"blogEndNav\">\n              <hr\n                className=\"page-theme-hr\"\n                style={{\n                  border: null,\n                  borderTop: \"1px solid #ccc\",\n                  marginTop: \"5rem\",\n                }}\n              />\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Link to=\"/blog\">Back to Blogs</Link>\n                <Link to=\"/\">Home</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <PageFooter />\n    </div>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        basecolor\n        author\n        enablecomments\n        category\n        bgimage\n        external_link\n        external_site_name\n        external_site_link\n        page_slug\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst GooFilter = () => (\n  <svg\n    style={{ visibility: \"hidden\", position: \"absolute\" }}\n    width=\"0\"\n    height=\"0\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    version=\"1.1\"\n  >\n    <defs>\n      <filter id=\"goo\">\n        <feGaussianBlur in=\"SourceGraphic\" stdDeviation=\"10\" result=\"blur\" />\n        <feColorMatrix\n          in=\"blur\"\n          mode=\"matrix\"\n          values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9\"\n          result=\"goo\"\n        />\n        <feComposite in=\"SourceGraphic\" in2=\"goo\" operator=\"atop\" />\n      </filter>\n    </defs>\n  </svg>\n);\n\nconst CompactHeader = ({\n  title,\n  category,\n  date,\n  bgImageName,\n  mood = \"#fdfdfd\",\n  readingTime,\n}) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { relativeDirectory: { eq: \"images/blog_covers\" } }) {\n        edges {\n          node {\n            base\n            name\n            relativePath\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const imageData = data.allFile.edges.find(\n    (edge) => edge.node.name === bgImageName\n  );\n\n  const gatsbyImageData = imageData\n    ? getImage(imageData.node.childImageSharp.gatsbyImageData)\n    : getImage(\n        data.allFile.edges.find((edge) => edge.node.name === \"blog_index_cover\")\n          .node.childImageSharp.gatsbyImageData\n      );\n\n  return (\n    <header className=\"compact\" style={{ \"--mood\": mood }}>\n      {gatsbyImageData && (\n        <GatsbyImage\n          image={gatsbyImageData}\n          alt=\"\"\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n          }}\n        />\n      )}\n      <div className=\"compact-header-container\">\n        <GooFilter />\n        <div className=\"text-container\">\n          <div className=\"merged-bg-container title\">\n            <span>{title}</span>\n          </div>\n          {(category || date) && (\n            <div className=\"merged-bg-container meta-data\">\n              <span>\n                {category}\n                {category && date && <br />}\n                {date}\n                {readingTime && ` | ${readingTime}`}\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nCompactHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  category: PropTypes.string,\n  date: PropTypes.string,\n  bgImageName: PropTypes.string,\n  mood: PropTypes.string,\n  readingTime: PropTypes.string,\n};\n\nexport default CompactHeader;\n"],"names":["_ref","data","post","markdownRemark","React","Seo","title","frontmatter","description","excerpt","pathname","page_slug","image","bgimage","article","datePublished","date","CompactHeader","mood","bgImageName","category","className","dangerouslySetInnerHTML","__html","html","style","border","borderTop","marginTop","display","justifyContent","Link","to","PageFooter","GooFilter","visibility","position","width","height","xmlns","version","id","in","stdDeviation","result","mode","values","in2","operator","readingTime","useStaticQuery","imageData","allFile","edges","find","edge","node","name","gatsbyImageData","getImage","childImageSharp","GatsbyImage","alt","top","left"],"sourceRoot":""}